const allWorks = new Set()
const allCategories = new Set()
const actualModal = null


const projectGal = document.querySelector(".gallery");
const portfolio = document.querySelector("#portfolio");
const filterContainer = document.querySelector("#filterBtnContainer");
let login = document.querySelector('#login');
const body = document.querySelector('body');
const proTitle = document.querySelector('#projectTitle');
const token = localStorage.getItem("token");
const BtnModalAjout = document.querySelector("#AjoutP");
const modalGes = document.querySelector('.modalGes');
const modalAjout = document.querySelector('.modalAjout');
const backModalArrow = document.querySelectorAll('#back');
const closeModalBtn = document.querySelectorAll('.close');
const modalGalery = document.querySelector('#galerieMini');

async function init() {
    const works = await fetchDatabaseData("works")
    for (const work of works) {
        allWorks.add(work)
    }
    const categories = await fetchDatabaseData("categories")
    for (const categorie of categories) {
        allCategories.add(categorie)
    }
    genProGal()
    if (token) {
        isConnected()
    }
    else {
        createFilter()
    }

}
init()

function isConnected() {
    const logButton = document.querySelector("#log")
    logButton.textContent = "logout"

    const editor = document.querySelector(".editor");
    editor.style.display = "flex";


    // button to modify the project section => mettre dans le html en hidden
    const modifyProject = document.querySelector(".modiferProj")
    modifyProject.style.display = "block";

    document.querySelectorAll('.js-modal').forEach(a => {
        a.addEventListener('click', openModal)
    })



    // click on logout
    logButton.addEventListener("click", (e) => {
        e.preventDefault()
        // suprimer le local storage et remettre le site en mode visiteur
        localStorage.clear()
        window.location.reload()

    });
    ModalGal()
    modalUploadPic()
}

/*
    for(const work of allWorks){
        if(work.id == deletedID){
            allWorks.remove(work)
            break
        }
    }

    pour figure modal, ne aps oublier icone en position absolute et figure en position relative

*/

// get works form api and make gallery be generated by javascript automaticly
async function fetchDatabaseData(type) {
    try {
        const response = await fetch(`http://localhost:5678/api/${type}`);
        return response.json()
    } catch (error) {
        console.error('Erreur lors de la récupération des données depuis l\'API:', error);
    }
}
// creation of the elements of the gallery 
function genProGal(filtre = "0") {
    projectGal.innerHTML = ""
    const fragment = document.createDocumentFragment()
    let selectedWorks = allWorks

    if (filtre != "0") {
        selectedWorks = [...allWorks].filter(work => work.categoryId == filtre);
        console.log(selectedWorks);
    }
    for (const work of selectedWorks) {
        // we build the <figure> frist
        const project = document.createElement('figure');
        project.innerHTML = `<img src="${work.imageUrl}" alt="${work.title}">
                            <figcaption>${work.title}</figcaption>`
        //now we appenchild the figure to the main gallery div
        fragment.appendChild(project);
    }
    projectGal.appendChild(fragment)
}

function createFilter() {
    const buttonAll = document.createElement("button")
    buttonAll.dataset.id = "0"
    buttonAll.textContent = "Tous"
    buttonAll.setAttribute("class", "filterBtn filterBtn_selected");
    filterContainer.appendChild(buttonAll)

    for (const category of allCategories) {
        const button = document.createElement("button");
        button.dataset.id = category.id;
        button.textContent = category.name;
        button.setAttribute("class", "filterBtn");
        filterContainer.appendChild(button);
    }

    FilterEvent()
}

function FilterEvent() {
    const filterButtons = document.querySelectorAll(".filterBtn");

    filterButtons.forEach(button => {
        button.addEventListener("click", function (e) {
            const clickedButton = e.target
            const categoryId = clickedButton.dataset.id;
            //retiré selected de l'ancien et le mettre sur le nouveau

            filterButtons.forEach(btn => {
                btn.classList.remove('filterBtn_selected');
            });
            clickedButton.classList.add('filterBtn_selected');
            genProGal(categoryId);
        });
    });
}







/*function gallerie dans la modale*/
function ModalGal() {
    modalGalery.innerHTML = ""
    const modalFragment = document.createDocumentFragment()
    for (const work of allWorks) {
        // we build the <figure> frist
        const project = document.createElement('figure');
        project.innerHTML = `<img src="${work.imageUrl}" alt="${work.title}">
                            <i class="fas fa-trash-can btnDelete" data-id="${work.id}"></i>`
        //now we appenchild the figure to the modal gallery div
        modalFragment.appendChild(project);
    }
    modalGalery.appendChild(modalFragment);

    modalEvents()

}
/*function pour la suppression depuis la modal */


function modalEvents() {
    const modalDelBtns = document.querySelectorAll(".btnDelete");

    modalDelBtns.forEach(btn => {
        btn.addEventListener("click", async function () {
            const deletedID = btn.dataset.id;

            const tryDelete = await deleteWork(deletedID)

            if (tryDelete) {
                for (const work of allWorks) {
                    if (work.id == deletedID) {
                        allWorks.delete(work);
                        break;
                    }
                }
                console.log('Ressource supprimée avec succès');
                ModalGal();
                genProGal();
            } else {
                throw new Error('Erreur lors de la suppression de la ressource');
            }
        });
    });
}

async function deleteWork(id) {
    const response = await fetch(`http://localhost:5678/api/works/${id}`, {
        method: 'DELETE',
        headers: {
            "authorization": "bearer " + token
        },
    })
    if (response.ok) {
        return true
    } else {
        console.log(response);
        return false
    }
}

function modalUploadPic() {
    document.querySelector('#uploadForm').addEventListener('submit', function (e) {
        e.preventDefault();

        const pictureInput = document.getElementById('picture');
        const imagePreview = document.getElementById('imagePreview');

        pictureInput.addEventListener('change', function () {
            const file = pictureInput.files[0];

            if (file) {
                const reader = new FileReader();

                reader.onload = function (e) {
                    imagePreview.src = e.target.result;
                    imagePreview.style.display = 'block';
                };

                reader.readAsDataURL(file);
            } else {
                imagePreview.src = '';
                imagePreview.style.display = 'none';
            }
        });

        const formData = new FormData(this);

        fetch('http://localhost:5678/api/works', {
            method: 'POST',
            body: formData,
            headers: {
                "authorization": "bearer " + token
            }
        })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Erreur lors de l\'envoi du formulaire');
                }
                return response.json();
            })
            .then(data => {
                console.log('Formulaire envoyé avec succès:', data);
            })
            .catch(error => {
                console.error('Erreur lors de l\'envoi du formulaire:', error);
            });
    });
}

const openModal = function (e) {
    e.preventDefault();
    const target = document.querySelector(e.target.getAttribute('href'));
    target.style.display = null
    target.removeAttribute('aria-hidden')
    target.setAttribute('aria-modal', true)
    modal = target
    modal.addEventListener('click', closeModal);
    modal.querySelector('.js-modal-close').addEventListener('click', closeModal);
    modal.querySelector('.js-stop').addEventListener('click', stopPropagation);
    BtnModalAjout.addEventListener('click', openModalAjout);
    
}

const openModalAjout = function () {
    if (modal === null) return;
    const target2 = document.querySelector('#modal2');
    modal.style.display = "none";
    modal.setAttribute('aria-hidden', true);
    modal.removeAttribute('aria-modal');
    target2.style.display = null;
    target2.removeAttribute('aria-hidden');
    target2.setAttribute('aria-modal', true);
    modal2 = target2;
    modal.removeEventListener('click', closeModal);
    modal.querySelector('.js-modal-close').removeEventListener('click', closeModal);
    modal.querySelector('.js-stop').removeEventListener('click', stopPropagation);
    modal2.addEventListener('click', closeModal);
    modal2.querySelector('.js-modal-close').addEventListener('click', closeModal);
    modal2.querySelector('.js-stop').addEventListener('click', stopPropagation);
}

const stopPropagation = function (e) {
    e.stopPropagation()
}

const closeModal = function (e) {
    if (modal === null) return;
    e.preventDefault();
    modal.style.display = "none"
    modal.setAttribute('aria-hidden', true)
    modal.removeAttribute('aria-modal')
    modal.removeEventListener('click', closeModal);
    modal.querySelector('.js-modal-close').removeEventListener('click', closeModal);
    modal.querySelector('.js-stop').removeEventListener('click', stopPropagation);
    modal = null
    modal2.style.display = "none"
    modal2.setAttribute('aria-hidden', true)
    modal2.removeAttribute('aria-modal')
    modal2.removeEventListener('click', closeModal);
    modal2.querySelector('.js-modal-close').removeEventListener('click', closeModal);
    modal2.querySelector('.js-stop').removeEventListener('click', stopPropagation);
    modal2 = null

}